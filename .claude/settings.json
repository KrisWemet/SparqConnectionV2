{
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "cd \"/Users/chrisouimet/Sparq Connection/sparq-connection\" && ./.claude/hooks/format-and-lint.sh \"$CLAUDE_FILE_PATHS\""
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "cd \"/Users/chrisouimet/Sparq Connection/sparq-connection\" && ./.claude/hooks/type-check.sh \"$CLAUDE_FILE_PATHS\""
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "cd \"/Users/chrisouimet/Sparq Connection/sparq-connection\" && ./.claude/hooks/test-runner.sh \"$CLAUDE_FILE_PATHS\""
          }
        ]
      },
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "cd \"/Users/chrisouimet/Sparq Connection/sparq-connection\" && ./.claude/hooks/security-scan.sh \"$CLAUDE_FILE_PATHS\""
          }
        ]
      }
    ],
    "PreToolUse": [
      {
        "matcher": "Bash",
        "hooks": [
          {
            "type": "command",
            "command": "cd \"/Users/chrisouimet/Sparq Connection/sparq-connection\" && ./.claude/hooks/build-check.sh"
          }
        ]
      }
    ],
    "Notification": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "echo \"Claude Code Notification: $CLAUDE_NOTIFICATION\" >> \"/Users/chrisouimet/Sparq Connection/.claude/notifications.log\""
          }
        ]
      }
    ]
  },
  "permissions": {
    "allow": [
      "Bash(npm run lint)",
      "Bash(npm run lint:fix)",
      "Bash(npm run format)",
      "Bash(npm run format:check)",
      "Bash(npm run typecheck)",
      "Bash(npm run build)",
      "Bash(npm run test:*)",
      "Bash(npm run dev)",
      "Bash(npm run start)",
      "Read(src/**/*)",
      "Write(src/**/*)",
      "Edit(src/**/*)",
      "MultiEdit(src/**/*)"
    ],
    "deny": [
      "Bash(rm -rf)",
      "Bash(curl -*)",
      "Write(.env*)",
      "Edit(.env*)",
      "Write(node_modules/**/*)",
      "Edit(node_modules/**/*)"
    ]
  },
  "env": {
    "CLAUDE_CODE_ENABLE_TELEMETRY": "1",
    "SPARQ_HOOKS_ENABLED": "1"
  }
}